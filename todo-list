#!/usr/bin/python3
#Copyright (C) 2022 Jonas LÃ¼tolf
#imports from src
from todo_list.argummentparser import ArgummentParser
from todo_list.listhandler import ListHandler
from todo_list.ui import UI
from todo_list.settingshandler import SettingsHandler

#imports from std libary
from os.path import expanduser
from sys import argv

#exceptions
class NoCommandError(Exception):
    def __init__(self):
        super().__init__()

    def __str__(self):
        return f"NoCommandError no command found in the call"

class FlagNotFound(Exception):
    def __init__(self,flag_name):
        super().__init__()
        self.flag_name=flag_name

    def __str__(self):
        return f"FlagNotFound: falg {self.flag_name} not found"


def parse_args()->tuple:
    arg_parser=ArgummentParser()
    arg_parser.add_command("show",1)
    arg_parser.add_command("add-task",1)
    arg_parser.add_command("delete-task",2)
    arg_parser.add_command("change-state",2)

    arg_parser.add_flag("state",1,"s")      
    arg_parser.add_flag("folder",1,"f")     
    return arg_parser.parse(argv[1:])

def main()->None:
    command,command_args,flags=parse_args()

    #load settings
    settings_handler=SettingsHandler(f"{expanduser('~')}/.todo-list/config.yaml")
    settings=settings_handler.get_settings()
    
    #make ui
    ui=UI(settings)
    
    if command==None:
        raise NoCommandError()
    
    #set folder path
    if "--folder" in flags:
        folder=flags["--folder"][0]
    else:
        folder=settings["list_folder"]
    
    #open list

    list_handler=ListHandler(command_args[0],folder)
    
    #execute command
    match command:
        case "show":
            #set state
            if "--state" in flags:
                state=int(flags["--state"][0])        
            else:
                state=None

            ui.print_list(list_handler,state)

        case "add-task":
            new_task_data=ui.ask_task_informations()
            list_handler.add_task(new_task_data["name"],new_task_data["description"],new_task_data["state"])
        
        case "delete-task":
            list_handler.delete_task(command_args[1])

        case "change-state":
            state=1
                
            list_handler.change_state(command_args[1],state)
            
    
    #write list
    list_handler.write()   

if __name__=="__main__":
    try:
        main()
    except Exception as exc:
        print(exc)
